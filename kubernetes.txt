Kubernetes (K8s) - это система управления контейнерами
- автоматическое развертывание приложений в контейнерах на серверах
- распределение нагрузки по серверам имеющимся в кластере кубера
- авто масштабирование, если нагрузка возрастает
- мониторинг и проверка работоспособности (health check), замена неработающих контейнеров

Среды запуска контейнеров (container runtime environment)
- docker engine
- CRI-O
- containerd

POD - самый маленький элемент, внутри которого запускаются контейнеры. K8s создает поды на различных серверах.
Под состоит из одного или нескольких контейнеров, общего тома, общий IP адрес для контейнеров.
Рекомендуется схема: 1 контейнер - 1 под
Но если какой то контейнер (микросервис) тесно связан с другим, то можно создавать несколько контейнеров внутри одного пода

    Кластер кубернетис

Состоит из улов (nodes) - каждый узел это один сервер (виртуальный, реальный). Они могут находится в разных частях мира, но логически принадлежать одному кластеру кубера.
В каждой node запускаются несколько pods. А внутри подов - уже контейнер или контейнеры

У каждого node есть роль:
- главный узел (он только контролирует все узлы)
- рабочий узел (нвгрзка распределяется между ними)
Можно настраивать резервирование для главного узла (главный и резервный узел)

    Сервисы, которые запускаются на узлах в кластере

На всех узлах есть сервисы:
- kubelet (коммуникация между nodes в рамках кластера. Он взаимодействует с API server на главной ноде)
- kube-proxy (отвечает за сеть)
- container runtime (отвечает за создание и контроль контейнеров на каждом узле)
 Кроме того на главном узле есть доп сервисы:
- API server 
- scheduler (отвечает за планирование и распределение нагрузки между узлами в рамках кластера) н-р: я могу сказать на гласном узле, что хочу развернуть приложение на 10 подах и уже он решает где их разворачивать и как распределять нагрузку
- kube controller manager (контролирует все поды в рамках кластера)
- cloud controller manager (взаисодействует с провайдерским менеджером, который предоставляет услугу создания облачного кластера)
- etcd (сохранение логов и инфы о кластере в матер ноде)
Внутри мастер ноды есть DNS сервис и поэтому внутри кластера можно ваимодействовать с помощтю имен

    Упаравление кластером с помощью kebectl

Чтобы управлять всем класетром нужна утилита - kubectl (в CLI). Есть графическая надтройка - K8s dashboard
Это клиент для управления локальным или удаленным кластером K8s
Можно со своего компа управлять кластером, который в облаке
kubectl связывается через API с API server по https
Его надо установить на компе

https://kubernetes.io/ru
https://kubernetes.io/docs/tasks/tools/ - для устаноки kubectl и minicube

Установка kubectl:
https://kubernetes.io/docs/tasks/tools/install-kubectl-windows/

Лучше выполнять команды в GIT Bash
Лучше устанавливать через curl
kubectl version --client

Установка minicube:
https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download
Лучше усьановить через PowerShell и затем через него же добавить в $PATH (в режиме админа)
minikube version

minikube start - для запуска кластера. Он автоматически найдет докер, если он есть и начнет скачивать образ и запускать контейнер minikube (этот контейнер и будет являться кластером в нашей среде обучения и уже в нем мы будем поднимать поды, как бы контейнер в контейнере)
можно выбрать где поднимать minikube:
minikube start --driver=название

minikube status










