                        Процесс подключения по SSH с использованием ключей

1) Генерация ключевой пары:
    Клиент генерирует ключевую пару: Обычно ключевая пара генерируется на стороне клиента. Команда для генерации ключевой пары на Linux или macOS выглядит следующим образом:

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

    Приватный ключ: Хранится на клиенте и защищен паролем (по желанию). Пример пути к приватному ключу: ~/.ssh/id_rsa.
    Публичный ключ: Хранится на сервере. Пример пути к публичному ключу: ~/.ssh/id_rsa.pub.

2) Копирование публичного ключа на сервер:

Публичный ключ должен быть скопирован на сервер и добавлен в файл ~/.ssh/authorized_keys для соответствующего пользователя. Команда для копирования ключа может выглядеть так:

ssh-copy-id user@server_ip

Либо можно вручную скопировать содержимое файла публичного ключа (~/.ssh/id_rsa.pub) и вставить его в файл ~/.ssh/authorized_keys на сервере.

3) Установка соединения:

Клиент устанавливает SSH-соединение с сервером, используя команду:

    ssh user@server_ip

    Сначала идет аутентификация на сервере: Сервер проверяет, есть ли соответствующий публичный ключ в файле ~/.ssh/authorized_keys. Если ключ найден, сервер отправляет клиенту вызов (challenge), зашифрованный с использованием публичного ключа.

    Затем идет аутентификация с использованием приватного ключа на клиенте:
    Клиент расшифровывает вызов с помощью своего приватного ключа и отправляет ответ обратно на сервер.
    Сервер проверяет ответ, чтобы убедиться, что он расшифрован правильно, что подтверждает владение приватным ключом.

    Роли ключей в процессе SSH

Приватный ключ: Хранится на клиенте и используется для расшифровки вызова, отправленного сервером. Он должен оставаться секретным и защищенным.
Публичный ключ: Хранится на сервере и используется для шифрования вызова, который отправляется клиенту. Он не требует защиты и может быть доступен публично.


                        Подключение по SSH впервые (не важно как)

Отпечаток ключа (или fingerprint) — это короткая строка, которая однозначно идентифицирует криптографический ключ. Это результат хэширования публичного ключа с использованием криптографического хэш-алгоритма, такого как MD5, SHA-1 или SHA-256.

Когда вы подключаетесь к серверу по SSH впервые, клиент SSH получает отпечаток публичного (одного из публичных) ключа хоста сервера. Так как клиент еще не знает, доверять ли этому ключу, он отображает предупреждающее сообщение и просит подтвердить, хотите ли вы продолжить подключение. Сообщение выглядит примерно так:

The authenticity of host 'server_ip (server_ip)' can't be established.
ECDSA key fingerprint is SHA256:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.
Are you sure you want to continue connecting (yes/no/[fingerprint])?

Объяснение сообщения
    The authenticity of host 'server_ip (server_ip)' can't be established.
        Клиент сообщает, что он не знает, можно ли доверять серверу, так как это первый раз, когда клиент подключается к этому серверу, и ключ сервера не был ранее сохранен.

    ECDSA key fingerprint is SHA256
        Клиент отображает отпечаток (fingerprint) ключа хоста сервера, используя алгоритм хэширования (в данном случае SHA256). Это уникальный идентификатор ключа.

    Are you sure you want to continue connecting (yes/no/[fingerprint])?
        Клиент предлагает пользователю ввести yes для продолжения подключения, no для отмены, или отпечаток ключа для проверки.

Что происходит при подтверждении

Если вы вводите yes, клиент SSH сохраняет ключ хоста сервера в файле known_hosts на клиентской стороне (обычно в файле ~/.ssh/known_hosts). Это позволяет клиенту доверять этому серверу при будущих подключениях, и при последующих попытках подключения это сообщение больше не появится, если ключ сервера не изменится.

Проверка ключа хоста

Для повышения безопасности рекомендуется заранее получить отпечаток ключа сервера от администратора сервера или другого доверенного источника и сравнить его с отпечатком, отображаемым в сообщении. Это поможет убедиться, что вы подключаетесь к правильному серверу и избежать атак "man-in-the-middle".
Пример команды для получения отпечатка ключа хоста на сервере

ssh-keygen -lf /etc/ssh/ssh_host_ecdsa_key.pub #тут может быть указан любой из существующих публичных ключей, какой именно надо смотреть при первом подключении к серверу
-l указывает на вывод отпечатка ключа.
-f указывает на файл, содержащий публичный ключ.

Вывод этой команды покажет отпечаток ключа, который можно передать пользователю для проверки.
Таким образом отпечаток ключа — это короткая строка, которая однозначно идентифицирует публичный ключ сервера. Он генерируется путем хэширования публичного ключа и используется для проверки подлинности сервера при установлении SSH соединения.


                        Процесс подключения по SSH с использованием пароля

Даже при подключении по SSH с использованием пароля клиент и сервер генерируют временные (ephemeral) числа, чтобы безопасно создать общий секрет и сгенерировать сессионный ключ. Этот процесс называется обменом ключами и обычно включает в себя алгоритм Диффи-Хеллмана (Diffie-Hellman) или его варианты, такие как ECDH (Elliptic Curve Diffie-Hellman).
Процесс подключения по SSH с использованием пароля

    Инициация соединения и выбор алгоритмов:
        Клиент и сервер договариваются об используемых криптографических алгоритмах для шифрования, хэширования и обмена ключами.

    Асимметричный обмен ключами (Diffie-Hellman или ECDH):
        При установке openssh-server автоматически генерируются ключи в директории /etc/ssh/. Это ключи, которые сервер будет использовать для идентификации себя перед клиентами.
        Публичные и приватные ключи находятся в файлах:
            /etc/ssh/ssh_host_rsa_key и /etc/ssh/ssh_host_rsa_key.pub (RSA)
            /etc/ssh/ssh_host_ecdsa_key и /etc/ssh/ssh_host_ecdsa_key.pub (ECDSA)
            /etc/ssh/ssh_host_ed25519_key и /etc/ssh/ssh_host_ed25519_key.pub (ED25519)
        Сервер отправляет свой публичный ключ клиенту, клиент проверяет его (точнее его хэш) на наличие в файле known_hosts (при повторном подключении) или соглашается принять ключ (при первом подключении)

    Генерация сеансового ключа:
        Клиент генерирует сеансовый ключ для симметричного шифрования, шифрует его с помощью публичного ключа сервера и отправляет серверу. На самом деле все немного сложнее, так как и клиент и сервер генерируют случайные числа, которыми они обмениваются и уже на основании этих чисел, используя определенные алгоритмы генерируют общий (одинаковый) сессионный ключ.
    
    Установление защищенного канала:
        Сессионный ключ используется для симметричного шифрования всех последующих данных, передаваемых между клиентом и сервером, включая процесс аутентификации.

    Аутентификация пользователя:
        После установления защищенного канала клиент отправляет серверу запрос на аутентификацию пользователя.
        Сервер запрашивает у клиента ввод пароля.
        Клиент вводит пароль, который передается серверу через зашифрованный канал.
        Сервер проверяет пароль и, если он корректен, разрешает доступ пользователю.

Чтобы гарантировать, что вы как клиент получили именно публичный ключ сервера при асимметричном обмене ключами при подключении по SSH, важно получить и проверить отпечаток (fingerprint) ключа сервера через надежный канал связи перед первым подключением. Это помогает предотвратить атаки типа "человек посередине" (MITM). Давайте рассмотрим это подробнее.
Способы получения и проверки отпечатка ключа сервера

    Получение отпечатка по надежному каналу:
        Физическая передача: Лично получить отпечаток ключа от администратора сервера.
        Зашифрованное сообщение: Получить отпечаток через зашифрованное электронное письмо или мессенджер с поддержкой шифрования (например, Signal или WhatsApp).
        Телефонный звонок: Позвонить администратору сервера и попросить продиктовать отпечаток ключа.

    Проверка отпечатка при первом подключении:
        Когда вы впервые подключаетесь к серверу по SSH, клиент SSH покажет вам отпечаток ключа сервера. Сравните его с тем отпечатком, который вы получили заранее.